{"version":3,"sources":["serviceWorker.js","components/firebase.js","components/home.js","components/landingpage.js","components/iframe/iframesystem.js","components/Navbar.js","components/event.js","components/nothinghere.js","components/ColorPanel/ColorPanel.js","components/SidePanel/UserPanel.js","actions/index.js","actions/types.js","components/SidePanel/Channels.js","components/SidePanel/DirectMessages.js","components/SidePanel/Favorite.js","components/SidePanel/SidePanel.js","components/Messages/MessagesHeader.js","components/Messages/ProgressBar.js","components/Messages/FileModal.js","components/Messages/MessageForm.js","components/Messages/Message.js","components/Messages/Typing.js","components/Messages/SkeletonChat.js","components/Messages/Messages.js","components/MetaPanel/MetaPanel.js","components/chat.js","components/Auth/Register.js","components/Auth/Login.js","reducers/index.js","loadingspinner.js","components/Todo/Todos.js","components/Todo/AddTodo.js","components/Todo/MainTodoApp.js","components/paper.js","components/course.js","index.js"],"names":["Boolean","window","location","hostname","match","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","home","react_default","a","createElement","className","id","src","alt","react_router_dom","exact","to","Button","Component","landingpage","style","display","height","System","title","this","props","width","React","Navbar","handleSignout","auth","signOut","then","console","log","href","activeClassName","onClick","about","components_Navbar","iframe_iframesystem","frameborder","allow","allowfullscreen","nothinghere","ColorPanel","state","modal","primary","secondary","user","_this","currentUser","usersRef","database","ref","handlePrimaryColor","color","setState","hex","handleSecondaryColor","handleSaveColors","saveColors","child","concat","uid","push","update","closeModal","catch","err","error","openModal","_this$state","Sidebar","as","Menu","icon","inverted","vertical","visible","background","Divider","Modal","basic","open","onClose","Header","Content","Segment","Label","content","lib","onChange","Actions","Icon","name","UserPanel","previewImage","croppedImage","blob","uploadedCroppedImage","storageRef","storage","userRef","metadata","contentType","dropdownOptions","key","text","displayName","disabled","uploadCroppedImage","put","snap","getDownloadURL","downloadURL","changeAvatar","updateProfile","photoURL","avatar","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","_this2","_this$state2","Grid","Column","padding","marginBottom","marginTop","marginLeft","Dropdown","trigger","Image","spaced","options","Input","fluid","type","label","centered","stackable","columns","Row","dist_default","node","image","border","scale","margin","setCurrentChannel","channel","payload","currentChannel","setPrivateChannel","isPrivateChannel","Channels","activeChannel","channels","channelName","channelDetails","channelsRef","messagesRef","typingRef","notifications","firstLoad","addListeners","loadedChannels","on","val","setFirstChannel","addNotificationListener","channelId","handleNotifications","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","removeListeners","off","firstChannel","length","setActiveChannel","addChannel","newChannel","details","createdBy","handleSubmit","preventDefault","isFormValid","Object","defineProperty","value","changeChannel","remove","clearNotifications","updatedNotifications","toConsumableArray","getNotificationCount","forEach","displayChannels","map","Item","opacity","active","_ref","Fragment","paddingBottom","fontStyle","Form","onSubmit","Field","connect","DirectMessages","users","connectedRef","presenceRef","currentUserUid","loadedUsers","set","onDisconnect","addStatusToUser","userId","connected","arguments","undefined","updatedUsers","reduce","acc","isUserOnline","status","channelData","getChannelId","currentUserId","Favorite","favChannels","favChannel","objectSpread","channelToRemove","filteredChannels","filter","SidePanel","size","fixed","fontSize","components_SidePanel_UserPanel","SidePanel_Favorite","SidePanel_Channels","SidePanel_DirectMessages","MessagesHeader","_this$props","numUniqueUsers","handleSearchChange","searchLoading","handleFavorite","isChannelFavorite","clearing","floated","sytle","Subheader","loading","placeholder","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","FileModal","authorized","addFile","sendFile","uploadFile","isAuthorized","mime","lookup","clearFile","filename","includes","_this$props2","MessageForm","uploadTask","message","errors","emojiPicker","handleTogglePicker","handleAddEmoji","emoji","oldMessage","newMessage","colonToUnicode","colons","setTimeout","messageInputRef","focus","replace","x","emojiIndex","emojis","unicode","native","handleKeyDown","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","sendMessage","getMessagesRef","getPath","pathToUpload","filePath","uuidv4","Math","round","bytesTransferred","totalBytes","snapshot","sendFileMessage","_this$state3","dist_es","onSelect","onKeyDown","labelPosition","some","onKeyPress","Group","widths","Messages_FileModal","Messages_ProgressBar","isOwnMessage","Message","Comment","Avatar","Author","Metadata","moment","fromNow","hasOwnProperty","isImage","Text","Typing","SkeletonChat","Messages","privateChannel","privateMessagesRef","messages","messagesLoading","searchTerm","searchResults","typingUsers","scrollToBottom","newMessageEnd","scrollIntoView","behavior","addMessageListener","addTypingListeners","loadedMessages","countUniqueUsers","setTopPosters","addUsersFavListeners","once","data","prevFav","keys","prevState","handleSearchMessages","channelMessages","regex","RegExp","uniqueUsers","plural","topPosters","displayMessages","Messages_Message","displayChannelName","displayTypingUsers","alignItems","components_Messages_Typing","displayMessageSkeleton","Array","_","i","components_Messages_SkeletonChat","prevProps","Messages_MessagesHeader","components_Messages_MessageForm","MetaPanel","activeIndex","setActiveIndex","titleProps","newIndex","formatCount","num","displayTopPosters","posts","entries","sort","b","_ref2","slicedToArray","List","Description","slice","attached","Accordion","styled","Title","circular","components_ColorPanel_ColorPanel","components_SidePanel_SidePanel","components_Messages_Messages","components_MetaPanel_MetaPanel","Register","username","email","password","passwordConfirmation","formisValid","formisEmpty","passwordisValid","dispalyErrors","handleUserInput","input","createUserWithEmailAndPassword","createdUser","md5","saveUser","handleInputError","inputName","toLowerCase","textAlign","verticalAlign","maxWidth","stacked","iconPosition","collections_Message_Message","Login","signInWithEmailAndPassword","signInUser","initialUserState","isLoading","initialChannelState","rootReducer","combineReducers","action","Spinner","Dimmer","Loader","Todos","todos","deleteTodo","todoList","todo","AddTodo","e","addTodo","MainTodoApp","random","Todo_AddTodo","Todo_Todos","paper","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isClicked","index_es","app","credentials","theme","typography","fontFamily","componentId","dataField","categoryField","queryFormat","autosuggest","filterLabel","borderColor","allowtransparency","Todo_MainTodoApp","sortBy","defaultValue","selectAllLabel","showCheckbox","showCount","showSearch","react","and","showFilter","URLParams","innerClass","showClearAll","clearAllLabel","onData","paperlist","pagination","stream","paginationAt","noResults","handleClick","bind","homepage","original_title","description","author_data","overview","release_date","img_source","course","colors","textColor","backgroundColor","primaryTextColor","primaryColor","titleColor","alertColor","pages","sortOptions","listItem","list","resultStats","resultsInfo","level","category","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","loadingspinner","react_router","path","component","chat","RootWithAuth","withRouter","ReactDOM","render","es","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9d7a588a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from \"@firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBhWrWg7RQVRs_GX46SOb-19N-5kVy4S60\",\r\n    authDomain: \"titiktemuchat.firebaseapp.com\",\r\n    databaseURL: \"https://titiktemuchat.firebaseio.com\",\r\n    projectId: \"titiktemuchat\",\r\n    storageBucket: \"titiktemuchat.appspot.com\",\r\n    messagingSenderId: \"442274982910\",\r\n    appId: \"1:442274982910:web:b0868b22040c94fb\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React, { Component } from 'react';\r\nimport './home.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nclass home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"home-container\">\r\n              <div className=\"home-cell\" id=\"h1\">\r\n                <div className=\"content-container\">\r\n                  <img\r\n                    className=\"BG-home\"\r\n                    src=\"Images/Production-Paper.png\"\r\n                    alt=\"BG-Paper\"\r\n                  />\r\n                </div>\r\n                <h1 className=\"home-desc\">Bost your knowledge and find your acedemical needs</h1>\r\n                <NavLink exact to=\"/paper\">\r\n                  <Button className=\"Paper\">\r\n                    Search your paper here\r\n                  </Button>\r\n                </NavLink>\r\n              </div>\r\n              <div className=\"home-cell\" id=\"h2\">\r\n                <div className=\"content-container\">\r\n                  <img\r\n                    className=\"BG-home\"\r\n                    src=\"Images/Production-Course.png\"\r\n                    alt=\"BG-Paper\"\r\n                  />\r\n                </div>\r\n                <h1 className=\"home-desc\">Find your passion and explore your curiosity</h1>\r\n                <NavLink exact to=\"/course\">\r\n                  <Button className=\"Course\">\r\n                    Search your course here \r\n                  </Button>\r\n                </NavLink>\r\n              </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default home;","import React, { Component } from 'react';\r\nimport './landingpage.css';\r\nimport '../index.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass landingpage extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n\r\n    //     this.state = {\r\n    //         isAccesswithMobile: false,\r\n    //         message: \"Please access with Computer or Laptop, Thank you!\"\r\n    //     };\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n        // <div className=\r\n        //     {\r\n        //     this.state.isAccesswithDesktop ?\r\n        //     \"landingpage\" : \"mobile-detected\"\r\n        //     }\r\n        // >\r\n        <div className=\"landingpage\">\r\n            <div className=\"container-width\">\r\n                <div className=\"clearfix\" />\r\n                <div className=\"row\" id=\"iv38q6\">\r\n                <div className=\"cell\" id=\"ii87nh\">\r\n                    <img\r\n                        className = \"BG-landing\"\r\n                        src=\"Images/Landingpage.png\"\r\n                        alt=\"landing-titiktumbuh\"\r\n                    />\r\n                </div>\r\n                <div className=\"cell\" id=\"iybx47\">\r\n                    <div className=\"landing_title\">\r\n                        \"The Internet is our Playground\"\r\n                        {/* <p className=\"landing_sub-title\">\r\n                            Temukan, Diskusikan, dan\r\n                            Bangun Passionmu\r\n                        </p> */}\r\n                        <p className=\"landing_sub-title\">\r\n                            Made for Self-starter, and Self-learner\r\n                            like you\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"button-row\">\r\n                        <div id=\"l1\">\r\n                            <NavLink className=\"login-btn\" style={{display: 'block', height: '100%'}} to=\"/login\">Login</NavLink>\r\n                        </div>\r\n                        <div id=\"s1\">\r\n                            <NavLink className=\"signup-btn\" style={{display: 'block', height: '100%'}} to=\"/register\">Sign me up!</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default landingpage;","import React from 'react';\r\nimport './iframesystem.css';\r\n\r\nclass System extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <iframe title=\"system\" src={this.props.src} height={this.props.height} width={this.props.width} className=\"iframesystem\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default System;\r\n","import React, { Component } from 'react';\r\nimport '../index.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport firebase from './firebase';\r\n\r\nclass Navbar extends Component {\r\n\r\n  handleSignout = () => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => console.log('Sign Out!'));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"navbar\">\r\n        <div className=\"logo-container\">\r\n          <NavLink exact to=\"/\">\r\n            <img\r\n              className=\"app-logo\"\r\n              src=\"Images/logo.png\"\r\n              alt=\"titiktemu\"\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        {/*This is the function to Show the Menu Page*/}\r\n        <div className=\"menu-navbar\">\r\n          <a href=\"/\">\r\n            <NavLink activeClassName=\"active-navlink-home\" exact to=\"/\">Home</NavLink>\r\n          </a>\r\n          {/* <a href=\"/event\">\r\n            <NavLink activeClassName=\"active-navlink-event\" exact to=\"/event\">Event</NavLink>\r\n          </a> */}\r\n          <a href=\"/chat\">\r\n            <NavLink activeClassName=\"active-navlink-chat\" exact to=\"/chat\">Chat</NavLink>\r\n          </a>\r\n          <div className=\"signout\">\r\n          <NavLink onClick={this.handleSignout}>\r\n            <img\r\n              src = \"https://img.icons8.com/windows/30/000000/shutdown.png\"\r\n              alt=\"logout\"\r\n              className=\"signout-btn\"\r\n            />\r\n          </NavLink>\r\n        </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport System from './iframe/iframesystem';\r\nimport './event.css';\r\n\r\nimport Navbar from './Navbar';\r\n\r\nclass about extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar />\r\n                <div className=\"event-container\">\r\n                    <div className=\"heading-event\">\r\n                        Excel your English Competency\r\n                    </div>\r\n                    <div className=\"seperator-event\"></div>\r\n                    <div className=\"detail-container\">\r\n                    <System\r\n                        className=\"video-component\"\r\n                        src=\"https://www.youtube.com/embed/Qb6SPx40v0g\"\r\n                        width=\"1024\"\r\n                        height=\"568\"\r\n                        frameborder=\"0\"\r\n                        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                        allowfullscreen\r\n                        /> \r\n                        <div className=\"chatbox\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default about;","import React, { Component } from 'react';\r\nimport Navbar from './Navbar';\r\n\r\nclass nothinghere extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <Navbar/>\r\n                </header>\r\n                <h1>404 Nothing Here!</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default nothinghere;","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport { Sidebar, Menu, Divider, Button, Modal, Icon, Label, Segment } from 'semantic-ui-react';\r\nimport { SliderPicker } from 'react-color';\r\n\r\nclass ColorPanel extends Component {\r\n  state = {\r\n    modal: false,\r\n    primary: \"\",\r\n    secondary: \"\",\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref('users')\r\n  };\r\n\r\n  handlePrimaryColor = color => this.setState({ primary: color.hex });\r\n\r\n  handleSecondaryColor = color => this.setState({ secondary: color.hex });\r\n\r\n  handleSaveColors = () => {\r\n    if (this.state.primary && this.state.secondary) {\r\n      this.saveColors(this.state.primary, this.state.secondary);\r\n    }\r\n  };\r\n\r\n  saveColors = (primary, secondary) => {\r\n    this.state.usersRef\r\n      .child(`${this.state.user.uid}/chatcolors`)\r\n      .push()\r\n      .update({\r\n        primary,\r\n        secondary\r\n      })\r\n      .then(() => {\r\n        console.log('Colors added');\r\n        this.closeModal();\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  render() {\r\n    const { modal, primary, secondary } = this.state;\r\n\r\n    return (\r\n      <Sidebar\r\n        as={Menu}\r\n        icon=\"labeled\"\r\n        inverted\r\n        vertical\r\n        visible\r\n        width=\"very thin\"\r\n        style = {\r\n          {\r\n            background: \"#008080\"\r\n          }\r\n        }\r\n      >\r\n        <Divider />\r\n        {/* <Button icon=\"add\" size=\"small\" onClick={this.openModal} color=\"black\" inverted/> */}\r\n        \r\n        {/* Color Picker Modal */}\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Choose Chat Colors</Modal.Header>\r\n          <Modal.Content>\r\n            <Segment inverted>\r\n            <Label content=\"Choose Primary Color\" />\r\n              <SliderPicker\r\n                color={primary}\r\n                onChange={this.handlePrimaryColor}\r\n              />\r\n            </Segment>\r\n\r\n            <Segment inverted>\r\n            <Label content=\"Choose Secondary Color\" />\r\n              <SliderPicker\r\n                color={secondary}\r\n                onChange={this.handleSecondaryColor}\r\n              />\r\n            </Segment>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color=\"teal\" inverted onClick={this.handleSaveColors}>\r\n              <Icon name=\"checkmark\" /> Save Colors\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Sidebar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPanel;","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport { Grid, Header, Dropdown, Image, Modal, Input, Button, Icon } from 'semantic-ui-react';\r\n\r\n/* Avatar Editor */\r\nimport AvatarEditor from 'react-avatar-editor';\r\n\r\nimport './UserPanel.css'\r\n\r\nclass UserPanel extends Component {\r\n  state = {\r\n    user: this.props.currentUser,\r\n    modal: false,\r\n    previewImage: '',\r\n    croppedImage: '',\r\n    blob: '',\r\n    uploadedCroppedImage: '',\r\n    storageRef: firebase.storage().ref(),\r\n    userRef: firebase.auth().currentUser,\r\n    usersRef: firebase.database().ref('users'),\r\n    metadata: {\r\n      contentType: 'image/jpeg'\r\n    }\r\n  };\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  dropdownOptions = () => [\r\n    {\r\n      key: \"user\",\r\n      text: (\r\n        <span>Signed in as\r\n          <strong>{this.state.user.displayName}</strong>\r\n        </span>\r\n      ),\r\n      disabled: true\r\n    },\r\n    {\r\n      key: \"avatar\",\r\n      text: <span onClick={this.openModal}>Change Avatar</span>\r\n    }\r\n  ];\r\n\r\n  uploadCroppedImage = () => {\r\n    const { storageRef, userRef, blob, metadata } = this.state;\r\n    \r\n    storageRef\r\n      .child(`avatars/user-${userRef.uid}`)\r\n      .put(blob, metadata)\r\n      .then(snap => {\r\n        snap.ref.getDownloadURL().then(downloadURL => {\r\n          this.setState({ uploadedCroppedImage: downloadURL }, () =>\r\n            this.changeAvatar()\r\n          );\r\n        });\r\n      });\r\n  };\r\n\r\n  changeAvatar = () => {\r\n    this.state.userRef\r\n      .updateProfile({\r\n        photoURL: this.state.uploadedCroppedImage\r\n      })\r\n      .then(() => {\r\n        console.log('PhotoURL Updated!');\r\n        this.closeModal();\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n    \r\n    this.state.usersRef\r\n      .child(this.state.user.uid)\r\n      .update({ avatar: this.state.uploadedCroppedImage })\r\n      .then(() => {\r\n        console.log('User avatar updated');\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  handleChange = event => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n      reader.addEventListener('load', () => {\r\n        this.setState({ previewImage: reader.result });\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCropImage = () => {\r\n    if (this.avatarEditor) {\r\n      this.avatarEditor.getImageScaledToCanvas().toBlob(blob => {\r\n        let imageUrl = URL.createObjectURL(blob);\r\n        this.setState({\r\n          croppedImage: imageUrl,\r\n          blob\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user, modal, previewImage, croppedImage } = this.state;\r\n\r\n    return (\r\n      < Grid style = {\r\n        {\r\n          background: \"#276366\"\r\n        }\r\n      } >\r\n        <Grid.Column>\r\n          {/* Chat App Header */}\r\n          {/* <Grid.Row style={{ padding: \"1.2em\", marginLeft: 40, marginTop: 20 }}>\r\n            <Header\r\n              inverted\r\n              float=\"left\"\r\n              as=\"h3\"\r\n            >\r\n              <Icon name=\"chat\" />\r\n              <Header.Content>Forum</Header.Content>\r\n            </Header>\r\n          </Grid.Row> */}\r\n          {/* User Dropdown Option (for Log out etc) */}\r\n          <Header style={{ padding: \"0.25em\", marginBottom: 45, marginTop: 45, marginLeft: 25 }} as=\"h3\" inverted>\r\n            <Dropdown\r\n              trigger={\r\n                <span>\r\n                  <Image src={user.photoURL} avatar spaced=\"right\" />\r\n                  {user.displayName}\r\n                </span>\r\n              }\r\n              options={this.dropdownOptions()} />\r\n          </Header>\r\n\r\n          {/* Change User Avatar Modal */}\r\n          <Modal basic open={modal} onClose={this.closeModal}>\r\n            <Modal.Header>Change Avatar</Modal.Header>\r\n            <Modal.Content>\r\n              <Input\r\n                onChange={this.handleChange}\r\n                fluid\r\n                type=\"file\"\r\n                label=\"Insert New Avatar\"\r\n                name=\"previewImage\"\r\n              />\r\n              <Grid\r\n                centered\r\n                stackable\r\n                columns={2}\r\n              >\r\n                <Grid.Row centered>\r\n                  <Grid.Column className=\"ui center aligned grid\">\r\n                    {previewImage && (\r\n                      <AvatarEditor\r\n                        ref={node => (this.avatarEditor = node)}\r\n                        image={previewImage}\r\n                        width={180}\r\n                        height={180}\r\n                        border={90}\r\n                        scale={1.2}\r\n                      />\r\n                    )}\r\n                  </Grid.Column>\r\n                  <Grid.Column>\r\n                    {croppedImage && (\r\n                      <Image\r\n                        style={{ margin: '3.5em auto' }}\r\n                        width={100}\r\n                        height={100}\r\n                        src={croppedImage}\r\n                      />\r\n                    )}\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              {croppedImage && <Button color=\"teal\"\r\n              onClick={this.uploadCroppedImage}\r\n              >\r\n                <Icon name=\"image\" /> Change Avatar\r\n              </Button>}\r\n              <Button color=\"teal\" inverted onClick={this.handleCropImage}>\r\n                <Icon name=\"save\" /> Preview Avatar\r\n              </Button>\r\n              <Button color=\"red\" onClick={this.closeModal}>\r\n                <Icon name=\"remove\" /> Cancel\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        </Grid.Column>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPanel;","import * as actionTypes from './types';\r\n\r\n/* User Action */\r\nexport const setUser = user => {\r\n  return {\r\n    type: actionTypes.SET_USER,\r\n    payload: {\r\n      currentUser: user\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearUser = () => {\r\n  return {\r\n    type: actionTypes.CLEAR_USER\r\n  };\r\n};\r\n\r\n/* Channel Action */\r\nexport const setCurrentChannel = channel => {\r\n  return {\r\n    type: actionTypes.SET_CURRENT_CHANNEL,\r\n    payload: {\r\n      currentChannel: channel\r\n    }\r\n  }\r\n}\r\n\r\n/* Make Private Channel */\r\nexport const setPrivateChannel = isPrivateChannel => {\r\n  return {\r\n    type: actionTypes.SET_PRIVATE_CHANNEL,\r\n    payload: {\r\n      isPrivateChannel\r\n    }\r\n  }\r\n}\r\n\r\n/* Get User Post */\r\nexport const setTopPosters = topPosters => {\r\n  return {\r\n    type: actionTypes.SET_TOP_POSTERS,\r\n    payload: {\r\n      topPosters\r\n    }\r\n  }\r\n}\r\n\r\n","/* User Action Type */\r\nexport const SET_USER = \"SET_USER\";\r\nexport const CLEAR_USER = \"CLEAR_USER\";\r\n\r\n/* Channels Action Type */\r\nexport const SET_CURRENT_CHANNEL = \"SET_CURRENT_CHANNEL\";\r\nexport const SET_PRIVATE_CHANNEL = \"SET_PRIVATE_CHANNEL\";\r\nexport const SET_TOP_POSTERS = \"SET_TOP_POSTERS\";","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentChannel, setPrivateChannel } from '../../actions';\r\nimport { Menu, Icon, Modal, Form, Input, Button, Label } from 'semantic-ui-react';\r\n\r\nclass Channels extends Component {\r\n  state = {\r\n    activeChannel: \"\",\r\n    user: this.props.currentUser,\r\n    channel: null,\r\n    channels: [],\r\n    channelName: \"\",\r\n    channelDetails: \"\",\r\n    channelsRef: firebase.database().ref(\"channels\"),\r\n    messagesRef: firebase.database().ref(\"messages\"),\r\n    typingRef: firebase.database().ref(\"userTyping\"),\r\n    notifications: [],\r\n    modal: false,\r\n    firstLoad: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.addListeners();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeListeners();\r\n  }\r\n\r\n  addListeners = () => {\r\n    let loadedChannels = [];\r\n    this.state.channelsRef.on(\"child_added\", snap => {\r\n      loadedChannels.push(snap.val());\r\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\r\n      this.addNotificationListener(snap.key);\r\n    });\r\n  };\r\n\r\n  addNotificationListener = channelId => {\r\n    this.state.messagesRef.child(channelId).on('value', snap => {\r\n      if (this.state.channel) {\r\n        this.handleNotifications(channelId, this.state.channel.id, this.state.notifications, snap);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\r\n    let lastTotal = 0;\r\n\r\n    let index = notifications.findIndex(notification => notification.id === channelId);\r\n\r\n    if (index !== -1) {\r\n      if (channelId !== currentChannelId) {\r\n        lastTotal = notifications[index].total;\r\n\r\n        if (snap.numChildren() - lastTotal > 0) {\r\n          notifications[index].count = snap.numChildren() - lastTotal;\r\n        }\r\n      }\r\n      notifications[index].lastKnownTotal = snap.numChildren();\r\n    } else {\r\n      notifications.push({\r\n        id: channelId,\r\n        total: snap.numChildren(),\r\n        lastKnownTotal: snap.numChildren(),\r\n        count: 0\r\n      });\r\n    }\r\n\r\n    this.setState({ notifications });\r\n  }\r\n\r\n  removeListeners = () => {\r\n    this.state.channelsRef.off();\r\n  };\r\n\r\n  // This is the fucntion for checking and setFirstChannel to be default channel\r\n  setFirstChannel = () => {\r\n    const firstChannel = this.state.channels[0];\r\n    if (this.state.firstLoad && this.state.channels.length > 0) {\r\n      this.props.setCurrentChannel(firstChannel);\r\n      this.setActiveChannel(firstChannel);\r\n      this.setState({ channel: firstChannel });\r\n    }\r\n    this.setState({ firstLoad: false });\r\n  };\r\n\r\n  addChannel = () => {\r\n    const { channelsRef, channelName, channelDetails, user } = this.state;\r\n\r\n    const key = channelsRef.push().key;\r\n\r\n    const newChannel = {\r\n      id: key,\r\n      name: channelName,\r\n      details: channelDetails,\r\n      createdBy: {\r\n        name: user.displayName,\r\n        avatar: user.photoURL\r\n      }\r\n    };\r\n\r\n    channelsRef\r\n      .child(key)\r\n      .update(newChannel)\r\n      .then(() => {\r\n        this.setState({ channelName: \"\", channelDetails: \"\" });\r\n        this.closeModal();\r\n        console.log(\"Channel created!\");\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (this.isFormValid(this.state)) {\r\n      this.addChannel();\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  //this is for changing and showing which one is an active channel\r\n  changeChannel = channel => {\r\n    this.setActiveChannel(channel);\r\n    this.state.typingRef\r\n      .child(this.state.channel.id)\r\n      .child(this.state.user.uid)\r\n      .remove();\r\n    this.clearNotifications();\r\n    this.props.setCurrentChannel(channel);\r\n    this.props.setPrivateChannel(false);\r\n    this.setState({ channel });\r\n  };\r\n\r\n  clearNotifications = () => {\r\n    let index = this.state.notifications.findIndex(\r\n      notification => notification.id === this.state.channel.id);\r\n    \r\n    if (index !== -1) {\r\n      let updatedNotifications = [...this.state.notifications];\r\n      updatedNotifications[index].total = this.state.notifications[index].lastKnownTotal;\r\n      updatedNotifications[index].count = 0;\r\n      this.setState({ notifications: updatedNotifications });\r\n    }\r\n  }\r\n\r\n  setActiveChannel = channel => {\r\n    this.setState({ activeChannel: channel.id });\r\n  };\r\n\r\n  getNotificationCount = channel => {\r\n    let count = 0;\r\n\r\n    this.state.notifications.forEach(notification => {\r\n      if (notification.id === channel.id) {\r\n        count = notification.count;\r\n      }\r\n    });\r\n\r\n    if (count > 0) return count;\r\n  }\r\n\r\n  displayChannels = channels =>\r\n    channels.length > 0 &&\r\n    channels.map(channel => (\r\n      <Menu.Item\r\n        key={channel.id}\r\n        onClick={() => this.changeChannel(channel)}\r\n        name={channel.name}\r\n        style={{ opacity: 1 }}\r\n        active={channel.id === this.state.activeChannel}\r\n      >\r\n        {this.getNotificationCount(channel) && (\r\n          <Label color=\"red\">{this.getNotificationCount(channel)}</Label>\r\n        )}\r\n        # {channel.name}\r\n      </Menu.Item>\r\n    ));\r\n  \r\n\r\n  isFormValid = ({ channelName, channelDetails }) =>\r\n    channelName && channelDetails;\r\n\r\n  openModal = () => this.setState({ modal: true });  \r\n\r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  render() {\r\n    const { channels, modal } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Menu.Menu style={{ paddingBottom: '2em', marginBottom: \"20\"}}>\r\n          <Menu.Item style={{ opacity: 1, fontStyle: 'bold' }}>\r\n            <span>\r\n              CHANNELS\r\n            </span>{\" \"}\r\n            ({channels.length}) <Icon name=\"add circle\" onClick={this.openModal}/>\r\n          </Menu.Item>\r\n          {this.displayChannels(channels)}\r\n        </Menu.Menu>\r\n\r\n        {/* Add channel Modal */}\r\n        <Modal basic open={modal} onClose={this.closeModal}>\r\n          <Modal.Header>Add a Channel</Modal.Header>\r\n          <Modal.Content>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"Name of Channel\"\r\n                  name=\"channelName\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n\r\n              <Form.Field>\r\n                <Input\r\n                  fluid\r\n                  label=\"Whats the channel about\"\r\n                  name=\"channelDetails\"\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Field>\r\n            </Form>\r\n          </Modal.Content>\r\n\r\n          <Modal.Actions>\r\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\r\n              <Icon name=\"checkmark\" /> Add\r\n            </Button>\r\n            <Button color=\"red\" inverted onClick={this.closeModal}>\r\n              <Icon name=\"remove\" /> Cancel\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { setCurrentChannel, setPrivateChannel }\r\n)(Channels);","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentChannel, setPrivateChannel } from '../../actions';\r\nimport { Menu, Icon } from 'semantic-ui-react';\r\n\r\nclass DirectMessages extends Component {\r\n  state = {\r\n    activeChannel: \"\",\r\n    user: this.props.currentUser,\r\n    users: [],\r\n    usersRef: firebase.database().ref('users'),\r\n    connectedRef: firebase.database().ref('.info/connected'),\r\n    presenceRef: firebase.database().ref('presence')\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListeners(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  addListeners = currentUserUid => {\r\n    let loadedUsers = [];\r\n    this.state.usersRef.on('child_added', snap => {\r\n      if (currentUserUid !== snap.key) {\r\n        let user = snap.val();\r\n        user['uid'] = snap.key;\r\n        user['status'] = 'Offline';\r\n        loadedUsers.push(user);\r\n        this.setState({ users: loadedUsers });\r\n      }\r\n    });\r\n\r\n    this.state.connectedRef.on('value', snap => {\r\n      if (snap.val() === true) {\r\n        const ref = this.state.presenceRef.child(currentUserUid);\r\n        ref.set(true);\r\n        ref.onDisconnect().remove(err => {\r\n          if (err !== null) {\r\n            console.error(err);\r\n          }\r\n        })\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on('child_added', snap => {\r\n      if (currentUserUid !== snap.key) {\r\n        this.addStatusToUser(snap.key);\r\n      }\r\n    });\r\n\r\n    this.state.presenceRef.on('child_removed', snap => {\r\n      if (currentUserUid !== snap.key) {\r\n        this.addStatusToUser(snap.key, false);\r\n      }\r\n    });\r\n  }\r\n\r\n  addStatusToUser = (userId, connected = true) => {\r\n    const updatedUsers = this.state.users.reduce((acc, user) => {\r\n      if (user.uid === userId) {\r\n        user['status'] = `${connected ? 'online' : 'offline'}`;\r\n      }\r\n      return acc.concat(user);\r\n    }, []);\r\n    this.setState({ users: updatedUsers });\r\n  }\r\n\r\n  isUserOnline = user => user.status === 'online';\r\n\r\n  changeChannel = user => {\r\n    const channelId = this.getChannelId(user.uid);\r\n    const channelData = {\r\n      id: channelId,\r\n      name: user.name\r\n    };\r\n    this.props.setCurrentChannel(channelData);\r\n    this.props.setPrivateChannel(true);\r\n    this.setActiveChannel(user.uid);\r\n  };\r\n\r\n  getChannelId = userId => {\r\n    const currentUserId = this.state.user.uid;\r\n    return userId < currentUserId\r\n      ? `${userId}/${currentUserId}`\r\n      : `${currentUserId}/${userId}`;\r\n  };\r\n\r\n  setActiveChannel = userId => {\r\n    this.setState({ activeChannel: userId });\r\n  }\r\n\r\n  render() {\r\n    const { users, activeChannel } = this.state;\r\n\r\n\r\n    return (\r\n      <Menu.Menu className=\"menu-chat\">\r\n        <Menu.Item>\r\n          <span>\r\n            DIRECT MESSAGES\r\n          </span>{' '}\r\n          ({users.length})\r\n        </Menu.Item>\r\n        {/* Users DM Send Method */}\r\n        {users.map(user => (\r\n          <Menu.Item\r\n            key={user.uid}\r\n            active={user.uid === activeChannel}\r\n            onClick={() => this.changeChannel(user)}\r\n            style={{ opacity: 0.9 }}\r\n          >\r\n            @ {user.name}\r\n            <Icon\r\n              name=\"circle thin\"\r\n              color={this.isUserOnline(user)\r\n                ? 'teal'\r\n                : 'grey'}\r\n            />\r\n          </Menu.Item>\r\n        ))}\r\n      </Menu.Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(DirectMessages);","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentChannel, setPrivateChannel } from '../../actions';\r\nimport { Menu, Icon } from 'semantic-ui-react';\r\n\r\nclass Favorite extends Component {\r\n  state = {\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref('users'),\r\n    activeChannel: '',\r\n    favChannels: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.state.user) {\r\n      this.addListeners(this.state.user.uid);\r\n    }\r\n  }\r\n\r\n  addListeners = userId => {\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child('favorite')\r\n      .on('child_added', snap => {\r\n        const favChannel = {\r\n          id: snap.key, ...snap.val()\r\n        };\r\n        this.setState({\r\n          favChannels: [...this.state.favChannels, favChannel]\r\n        });\r\n      });\r\n    \r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child('favorite')\r\n      .on('child_removed', snap => {\r\n        const channelToRemove = { id: snap.key, ...snap.val() };\r\n        const filteredChannels = this.state.favChannels.filter(channel => {\r\n          return channel.id !== channelToRemove.id;\r\n        });\r\n        this.setState({ favChannels: filteredChannels });\r\n      });\r\n  };\r\n\r\n  setActiveChannel = channel => {\r\n    this.setState({ activeChannel: channel.id });\r\n  };\r\n\r\n  changeChannel = channel => {\r\n    this.setActiveChannel(channel);\r\n    this.props.setCurrentChannel(channel);\r\n    this.props.setPrivateChannel(false);\r\n  };\r\n\r\n  displayChannels = favChannels =>\r\n  favChannels.length > 0 &&\r\n  favChannels.map(channel => (\r\n    <Menu.Item\r\n      key={channel.id}\r\n      onClick={() => this.changeChannel(channel)}\r\n      name={channel.name}\r\n      style={{ opacity: 1 }}\r\n      active={channel.id === this.state.activeChannel}\r\n    >\r\n      # {channel.name}\r\n    </Menu.Item>\r\n  ));\r\n\r\n  render() {\r\n    const { favChannels } = this.state;\r\n\r\n    return (\r\n      <Menu.Menu style={{ paddingBottom: '2em', marginBottom: \"20\"}}>\r\n          <Menu.Item style={{ opacity: 1, fontStyle: 'bold' }}>\r\n            <span>\r\n              FAVORITE\r\n            </span>{\" \"}\r\n            ({favChannels.length}) <Icon name=\"add circle\" onClick={this.openModal}/>\r\n          </Menu.Item>\r\n          {this.displayChannels(favChannels)}\r\n        </Menu.Menu>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, { setCurrentChannel, setPrivateChannel })(Favorite);","import React, { Component } from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\n// import './SidePanel.css';\r\nimport UserPanel from './UserPanel';\r\nimport Channels from './Channels';\r\nimport DirectMessages from './DirectMessages';\r\nimport Favorite from './Favorite';\r\n\r\nclass SidePanel extends Component {\r\n  render() {\r\n    const { currentUser } = this.props;\r\n\r\n    return (\r\n      <Menu\r\n        size=\"large\"\r\n        inverted\r\n        fixed=\"left\"\r\n        vertical\r\n        style = {\r\n          {\r\n            background: '#276366',\r\n            fontSize: '1.1rem',\r\n          }\r\n        }\r\n      >\r\n        <UserPanel currentUser={currentUser} />\r\n        <Favorite currentUser={currentUser} />\r\n        <Channels currentUser={currentUser} />\r\n        <DirectMessages currentUser={currentUser} />\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SidePanel;","import React, { Component } from 'react';\r\nimport { Segment, Header, Input, Icon } from 'semantic-ui-react';\r\nimport './messages.css';\r\n\r\n\r\nclass MessagesHeader extends Component {\r\n  render() {\r\n    const { channelName, numUniqueUsers, handleSearchChange, searchLoading, isPrivateChannel, handleFavorite, isChannelFavorite } = this.props;\r\n\r\n    return (\r\n      <Segment clearing>\r\n        {/* Channel Title */}\r\n        <Header fluid=\"true\" as=\"h2\" floated=\"left\" sytle={{ marginBottom: 0 }}>\r\n          <span>\r\n            { channelName }\r\n            {\" \"}\r\n            {!isPrivateChannel && (\r\n              <Icon\r\n                onClick={handleFavorite}\r\n                name={isChannelFavorite\r\n                  ? 'star'\r\n                  : 'star outline'}\r\n                color={isChannelFavorite\r\n                  ? 'yellow'\r\n                  : 'black'}\r\n              />\r\n              )}\r\n          </span>\r\n          {/* This is for Showing how much user in the active channel */}\r\n          <Header.Subheader>\r\n            {numUniqueUsers}\r\n          </Header.Subheader>\r\n        </Header>\r\n\r\n        {/* Channel Search Input */}\r\n        <Header floated=\"right\">\r\n          <Input\r\n            loading={searchLoading}\r\n            onChange={handleSearchChange}\r\n            size=\"small\"\r\n            icon=\"search\"\r\n            name=\"searchTerm\"\r\n            placeholder=\"Search Messages\"\r\n          />\r\n        </Header>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessagesHeader;","import React from 'react';\r\nimport { Progress } from 'semantic-ui-react';\r\n\r\nconst ProgressBar = ({ uploadState, percentUploaded }) => (\r\n  uploadState === \"uploading\" && (\r\n    <Progress\r\n      className=\"progress__bar\"\r\n      percent={percentUploaded}\r\n      progress\r\n      indicating\r\n      size=\"medium\"\r\n      inverted\r\n    />\r\n  )\r\n);\r\n\r\nexport default ProgressBar;","import React, { Component } from 'react';\r\nimport mime from 'mime-types';\r\nimport { Modal, Input, Button, Icon } from 'semantic-ui-react';\r\n\r\nclass FileModal extends Component {\r\n  state = {\r\n    file: null,\r\n    authorized: [\"image/jpeg\", \"image/png\"]\r\n  };\r\n\r\n  addFile = event => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      this.setState({ file });\r\n    }\r\n  };\r\n  \r\n  sendFile = () => {\r\n    const { file } = this.state;\r\n    const { uploadFile, closeModal } = this.props;\r\n\r\n    if (file !== null) {\r\n      if (this.isAuthorized(file.name)) {\r\n        const metadata = { contentType: mime.lookup(file.name) };\r\n        uploadFile(file, metadata);\r\n        closeModal();\r\n        this.clearFile();\r\n      }\r\n    }\r\n  };\r\n\r\n  isAuthorized = filename =>\r\n    this.state.authorized.includes(mime.lookup(filename));\r\n\r\n  clearFile = () => this.setState({ file: null });\r\n\r\n  render() {\r\n    const { modal, closeModal } = this.props;\r\n\r\n    return (\r\n      <Modal basic open={modal} onClose={closeModal}>\r\n        <Modal.Header>Select an Image File</Modal.Header>\r\n        <Modal.Content>\r\n          <Input\r\n            onChange={this.addFile}\r\n            fluid\r\n            label=\"File types: jpg, png\"\r\n            name=\"file\"\r\n            type=\"file\"\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            color=\"teal\"\r\n            inverted\r\n            onClick={this.sendFile}\r\n          >\r\n            <Icon name=\"checkmark\" /> Send pitcture\r\n          </Button>\r\n          <Button\r\n            color=\"red\"\r\n            onClick={closeModal}\r\n          >\r\n            <Icon name=\"remove\" /> Cancel\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileModal;","import React, { Component } from 'react';\r\nimport { Segment, Button, Input } from 'semantic-ui-react';\r\nimport ProgressBar from './ProgressBar';\r\n\r\n/* This library for create random strings */\r\nimport uuidv4 from 'uuid/v4';\r\n\r\n/* This firebase database */\r\nimport firebase from 'firebase';\r\n\r\n /* This is for Upload File */\r\nimport FileModal from './FileModal';\r\n\r\n/* Style list */\r\nimport './MessageForm.css';\r\n\r\n/* Emoji Component */\r\nimport { Picker, emojiIndex } from 'emoji-mart';\r\nimport 'emoji-mart/css/emoji-mart.css';\r\n\r\n\r\nclass MessageForm extends Component {\r\n  state = {\r\n    storageRef: firebase.storage().ref(),\r\n    typingRef: firebase.database().ref('userTyping'),\r\n    uploadState: \"\",\r\n    uploadTask: null,\r\n    percentUploaded: 0,\r\n    message: \"\",\r\n    channel: this.props.currentChannel,\r\n    user: this.props.currentUser,\r\n    loading: false,\r\n    errors: [],\r\n    modal: false,\r\n    emojiPicker: false\r\n  };\r\n\r\n  openModal = () => this.setState({ modal: true });\r\n  \r\n  closeModal = () => this.setState({ modal: false });\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleTogglePicker = () => {\r\n    this.setState({ emojiPicker: !this.state.emojiPicker });\r\n  }\r\n\r\n  handleAddEmoji = emoji => {\r\n    const oldMessage = this.state.message;\r\n    const newMessage = this.colonToUnicode(` ${oldMessage} ${emoji.colons} `);\r\n    this.setState({ message: newMessage, emojiPicker: false });\r\n    setTimeout(() => this.messageInputRef.focus(), 0);\r\n  }\r\n\r\n  colonToUnicode = message => {\r\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, x => {\r\n      x = x.replace(/:/g, \"\");\r\n      let emoji = emojiIndex.emojis[x];\r\n      if (typeof emoji !== \"undefined\") {\r\n        let unicode = emoji.native;\r\n        if (typeof unicode !== \"undefined\") {\r\n          return unicode;\r\n        }\r\n      }\r\n      x = \":\" + x + \":\";\r\n      return x;\r\n    });\r\n  };\r\n\r\n  handleKeyDown = () => {\r\n    const { message, typingRef, channel, user } = this.state;\r\n\r\n    if (message) {\r\n      typingRef\r\n        .child(channel.id)\r\n        .child(user.uid)\r\n        .set(user.displayName);\r\n    } else {\r\n      typingRef\r\n        .child(channel.id)\r\n        .child(user.uid)\r\n        .remove();\r\n    }\r\n  }\r\n\r\n  createMessage = (fileUrl = null) => {\r\n    const message = {\r\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n      user: {\r\n        id: this.state.user.uid,\r\n        name: this.state.user.displayName,\r\n        avatar: this.state.user.photoURL\r\n      },\r\n    };\r\n    if (fileUrl !== null) {\r\n      message['image'] = fileUrl;\r\n    } else {\r\n      message['content'] = this.state.message;\r\n    }\r\n    return message;\r\n  };\r\n\r\n  // sendMessage = () => {\r\n  //   const { getMessagesRef } = this.props;\r\n  //   const { message, channel } = this.state;\r\n\r\n  //   if (message) {\r\n  //     this.setState({ loading: true });\r\n  //     getMessagesRef()\r\n  //       .child(channel.id)\r\n  //       .push()\r\n  //       .set(this.createMessage())\r\n  //       .then(() => {\r\n  //         this.setState({ loading: false, message: \"\", errors: [] });\r\n  //       })\r\n  //       .catch(err => {\r\n  //         console.error(err);\r\n  //         this.setState({\r\n  //           loading: false,\r\n  //           errors: this.state.errors.concat(err)\r\n  //         });\r\n  //       });\r\n  //   } else {\r\n  //     this.setState({\r\n  //       errors: this.state.errors.concat({ message: \"Add your message\" })\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n    \r\n\r\n  sendMessage = (event) => {\r\n  const { getMessagesRef } = this.props;\r\n  const { message, channel, user, typingRef } = this.state;\r\n    \r\n    if (event.key === \"Enter\") {\r\n    if (message) {\r\n      this.setState({\r\n        loading: true\r\n      });\r\n      getMessagesRef()\r\n        .child(channel.id)\r\n        .push()\r\n        .set(this.createMessage())\r\n        .then(() => {\r\n          this.setState({\r\n            loading: false,\r\n            message: \"\",\r\n            errors: []\r\n          });\r\n          typingRef\r\n            .child(channel.id)\r\n            .child(user.uid)\r\n            .remove();\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          this.setState({\r\n            loading: false,\r\n            errors: this.state.errors.concat(err)\r\n          });\r\n        });\r\n      } else {\r\n        this.setState({\r\n          errors: this.state.errors.concat({\r\n            message: \"Add your message\"\r\n          })\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  getPath = () => {\r\n    if (this.props.isPrivateChannel) {\r\n      return `chat/private-${this.state.channel.id}`;\r\n    } else {\r\n      return 'chat/public';\r\n    }\r\n  }\r\n\r\n  uploadFile = (file, metadata) => {\r\n    const pathToUpload = this.state.channel.id;\r\n    const ref = this.props.getMessagesRef();\r\n    const filePath = `${this.getPath()}/${uuidv4()}.jpg`;\r\n\r\n    this.setState({\r\n      uploadState: 'uploading',\r\n      uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\r\n    },\r\n      () => {\r\n        this.state.uploadTask.on('state_changed', snap => {\r\n          const percentUploaded = Math.round((snap.bytesTransferred / snap.totalBytes) * 100);\r\n          this.setState({ percentUploaded });\r\n        },\r\n          err => {\r\n            console.error(err);\r\n            this.setState({\r\n              errors: this.state.errors.concat(err),\r\n              uploadState: 'error',\r\n              uploadTask: null\r\n            })\r\n          },\r\n          () => {\r\n            this.state.uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\r\n              this.sendFileMessage(downloadURL, ref, pathToUpload);\r\n            })\r\n              .catch(err => {\r\n              console.error(err);\r\n              this.setState({\r\n                errors: this.state.errors.concat(err),\r\n                uploadState: 'error',\r\n                uploadTask: null\r\n              })\r\n            })\r\n          }\r\n        )\r\n      }\r\n    )\r\n  };\r\n\r\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\r\n    ref.child(pathToUpload)\r\n      .push()\r\n      .set(this.createMessage(fileUrl))\r\n      .then(() => {\r\n      this.setState({ uploadState: 'done'})\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        this.setState({\r\n          errors: this.state.errors.concat(err)\r\n        })\r\n    })\r\n  };\r\n  \r\n  render() {\r\n    const { errors, message, loading, modal, uploadState, percentUploaded, emojiPicker } = this.state;\r\n\r\n    return (\r\n      <Segment className=\"message__form\">\r\n        {emojiPicker && (\r\n          <Picker\r\n            set=\"twitter\"\r\n            onSelect={this.handleAddEmoji}\r\n            className=\"emojipicker\"\r\n            title=\"Insert emoji\"\r\n            emoji=\"point_up\"\r\n          />\r\n        )}\r\n        <Input\r\n          fluid\r\n          name=\"message\"\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown}\r\n          value={message}\r\n          ref={node => (this.messageInputRef = node)}\r\n          style={{ marginBottom: \"0.7em\" }}\r\n          label={\r\n            <Button\r\n              icon=\r\n              {\r\n                emojiPicker\r\n                ? 'close'\r\n                : 'add'\r\n              }\r\n              content={emojiPicker ? 'close' : null}\r\n              onClick={this.handleTogglePicker}\r\n            />}\r\n          labelPosition=\"left\"\r\n          className={\r\n            errors.some(error => error.message.includes(\"message\"))\r\n              ? \"error\"\r\n              : \"\"\r\n          }\r\n          placeholder=\"Write your message\"\r\n          onKeyPress={this.sendMessage}\r\n        />\r\n        <Button.Group icon widths=\"2\">\r\n          <Button\r\n            onClick={this.sendMessage}\r\n            disabled={loading}\r\n            style={{ color: \"#fff\"}}\r\n            color=\"teal\"\r\n            content=\"Add Reply\"\r\n            labelPosition=\"left\"\r\n            icon=\"edit\"\r\n          />\r\n          <Button\r\n            color=\"grey\"\r\n            disabled={uploadState === \"uploading\"}\r\n            onClick={this.openModal}\r\n            content=\"Upload Media\"\r\n            labelPosition=\"right\"\r\n            icon=\"cloud upload\"\r\n          />\r\n        </Button.Group>\r\n        <FileModal\r\n          modal={modal}\r\n          closeModal={this.closeModal}\r\n          uploadFile={this.uploadFile}\r\n        />\r\n        <ProgressBar\r\n          uploadState={uploadState}\r\n          percentUploaded={percentUploaded}\r\n        />        \r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageForm;","import React from 'react';\r\nimport moment from 'moment';\r\nimport { Comment, Image } from 'semantic-ui-react';\r\n\r\n/* Style for messages */\r\nimport './messages.css';\r\n\r\nconst isOwnMessage = (message, user) => {\r\n  return message.user.id === user.uid ? 'message__self' : '';\r\n};\r\n\r\nconst isImage = (message) => {\r\n  return message.hasOwnProperty('image') && !message.hasOwnProperty('content');\r\n};\r\n\r\nconst timeFromNow = timestamp => moment(timestamp).fromNow();\r\n\r\nconst Message = ({ message, user }) => (\r\n  <Comment>\r\n    <Comment.Avatar src={message.user.avatar} />\r\n    <Comment.Content className={isOwnMessage(message, user)}>\r\n      <Comment.Author as=\"span\" className=\"author\">{message.user.name}</Comment.Author>\r\n      <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\r\n      {isImage(message) ?\r\n        <Image src={message.image} className=\"message__image\" /> :\r\n        < Comment.Text>{message.content}</Comment.Text>\r\n      }\r\n    </Comment.Content>\r\n  </Comment>\r\n);\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nconst Typing = () => (\r\n  <div className=\"typing\">\r\n    <div className=\"typing__dot\"></div>\r\n    <div className=\"typing__dot\"></div>\r\n    <div className=\"typing__dot\"></div>\r\n    <div className=\"typing__dot\"></div>\r\n    <div className=\"typing__dot\"></div>\r\n  </div>\r\n)\r\n\r\nexport default Typing;","import React from 'react';\r\nimport './SkeletonChat.css';\r\n\r\nconst SkeletonChat = () => (\r\n  <div className=\"skeleton_chat\">\r\n    <div className=\"skeleton__avatar\"></div>\r\n    <div className=\"skeleton__author\"></div>\r\n    <div className=\"skeleton__details\"></div>\r\n  </div>\r\n)\r\n\r\nexport default SkeletonChat;","import React, { Component } from 'react';\r\nimport { Segment, Comment } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\n/* For next Heros User adding the value here */\r\nimport { setTopPosters } from '../../actions';\r\n\r\nimport MessagesHeader from './MessagesHeader';\r\nimport MessageForm from './MessageForm';\r\nimport Message from './Message';\r\nimport firebase from 'firebase';\r\n\r\n /* sytle for messages */\r\nimport './messages.css';\r\n\r\n/* Typing */\r\nimport '../Messages/Typing.css';\r\nimport Typing from './Typing';\r\n\r\n/* Skeleton */\r\nimport SkeletonChat from './SkeletonChat';\r\n\r\nclass Messages extends Component {\r\n  state = {\r\n    privateChannel: this.props.isPrivateChannel,\r\n    privateMessagesRef: firebase.database().ref('privateMessages'),\r\n    messagesRef: firebase.database().ref(\"messages\"),\r\n    messages: [],\r\n    messagesLoading: true,\r\n    channel: this.props.currentChannel,\r\n    isChannelFavorite: false,\r\n    user: this.props.currentUser,\r\n    usersRef: firebase.database().ref('users'),\r\n    numUniqueUsers: '',\r\n    searchTerm: '',\r\n    searchLoading: false,\r\n    searchResults: [],\r\n    typingRef: firebase.database().ref('userTyping'),\r\n    typingUsers: [],\r\n    connectedRef: firebase.database().ref('.info/connected')\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { channel, user } = this.state;\r\n\r\n    if (channel && user) {\r\n      this.addListeners(channel.id);\r\n      this.addUsersFavListeners(channel.id, user.uid);\r\n    }\r\n  }\r\n\r\n  /* Autoscroll new messages */\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.newMessageEnd) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    this.newMessageEnd.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  addListeners = channelId => {\r\n    this.addMessageListener(channelId);\r\n    this.addTypingListeners(channelId);\r\n  };\r\n\r\n  addTypingListeners = channelId => {\r\n    let typingUsers = [];\r\n    this.state.typingRef.child(channelId).on('child_added', snap => {\r\n      if (snap.key !== this.state.user.uid) {\r\n        typingUsers = typingUsers.concat({\r\n          id: snap.key,\r\n          name: snap.val()\r\n        })\r\n        this.setState({ typingUsers });\r\n      }\r\n    })\r\n\r\n    this.state.typingRef.child(channelId).on('child_removed', snap => {\r\n      const index = typingUsers.findIndex(user => user.id === snap.key);\r\n      if (index !== -1) {\r\n        typingUsers = typingUsers.filter(user => user.id !== snap.key);\r\n        this.setState({ typingUsers });\r\n      }\r\n    })\r\n\r\n    this.state.connectedRef.on('value', snap => {\r\n      if (snap.val() === true) {\r\n        this.state.typingRef\r\n          .child(channelId)\r\n          .child(this.state.user.uid)\r\n          .onDisconnect()\r\n          .remove(err => {\r\n            if (err !== null) {\r\n              console.error(err);\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  /* Add this for the most liked post (Hero) */\r\n  addMessageListener = channelId => {\r\n    let loadedMessages = [];\r\n    const ref = this.getMessagesRef();\r\n    ref.child(channelId).on('child_added', snap => {\r\n      loadedMessages.push(snap.val());\r\n      this.setState({\r\n        messages: loadedMessages,\r\n        messagesLoading: false\r\n      });\r\n      this.countUniqueUsers(loadedMessages);\r\n      this.setTopPosters(loadedMessages);\r\n    });\r\n  };\r\n\r\n  addUsersFavListeners = (channelId, userId) => {\r\n    this.state.usersRef\r\n      .child(userId)\r\n      .child('favorite')\r\n      .once('value')\r\n      .then(data => {\r\n        if (data.val() !== null) {\r\n          const channelIds = Object.keys(data.val());\r\n          const prevFav = channelIds.includes(channelId);\r\n          this.setState({ isChannelFavorite: prevFav });\r\n      }\r\n    })\r\n  }\r\n\r\n  getMessagesRef = () => {\r\n    const { messagesRef, privateMessagesRef, privateChannel } = this.state;\r\n    return privateChannel\r\n      ? privateMessagesRef : messagesRef;\r\n  };\r\n\r\n  handleFavorite = () => {\r\n    this.setState(prevState => ({\r\n      isChannelFavorite: !prevState.isChannelFavorite\r\n    }), () => this.favChannel());\r\n  }\r\n\r\n  favChannel = () => {\r\n    if (this.state.isChannelFavorite) {\r\n      this.state.usersRef\r\n        .child(`${this.state.user.uid}/favorite`)\r\n        .update({\r\n          [this.state.channel.id]: {\r\n            name: this.state.channel.name,\r\n            details: this.state.channel.details,\r\n            createdBy: {\r\n              name: this.state.channel.createdBy.name,\r\n              avatar: this.state.channel.createdBy.avatar\r\n            }\r\n          }\r\n        });\r\n    } else {\r\n      this.state.usersRef\r\n        .child(`${this.state.user.uid}/favorite`)\r\n        .child(this.state.channel.id)\r\n        .remove(err => {\r\n          if (err !== null) {\r\n            console.error(err);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  handleSearchChange = event => {\r\n    this.setState(\r\n      {\r\n        searchTerm: event.target.value,\r\n        searchLoading: true\r\n      },\r\n      () => this.handleSearchMessages()\r\n    );\r\n  };\r\n\r\n  handleSearchMessages = () => {\r\n    const channelMessages = [...this.state.messages];\r\n    const regex = new RegExp(this.state.searchTerm, \"gi\");\r\n    const searchResults = channelMessages.reduce((acc, message) => {\r\n      if (\r\n        (message.content && message.content.match(regex)) ||\r\n        message.user.name.match(regex)\r\n      ) {\r\n        acc.push(message);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    this.setState({ searchResults });\r\n    setTimeout(() => this.setState({ searchLoading: false }), 1000);\r\n  };\r\n\r\n  countUniqueUsers = messages => {\r\n    const uniqueUsers = messages.reduce((acc, message) => {\r\n      if (!acc.includes(message.user.name)) {\r\n        acc.push(message.user.name);\r\n      }\r\n      return acc;\r\n    }, []);\r\n    const plural = uniqueUsers.length > 1 || uniqueUsers.length === 0;\r\n    const numUniqueUsers = `${uniqueUsers.length} user${plural ? \"s\" : \"\"}`;\r\n    this.setState({\r\n      numUniqueUsers\r\n    });\r\n  };\r\n\r\n  setTopPosters = messages => {\r\n    let topPosters = messages.reduce((acc, message) => {\r\n      if (message.user.name in acc) {\r\n        acc[message.user.name].count += 1;\r\n      } else {\r\n        acc[message.user.name] = {\r\n          avatar: message.user.avatar,\r\n          count: 1\r\n        };\r\n      }\r\n      return acc;\r\n    }, {});\r\n    this.props.setTopPosters(topPosters);\r\n  };\r\n\r\n  displayMessages = messages =>\r\n    messages.length > 0 &&\r\n    messages.map(message => (\r\n      <Message\r\n        key={message.timestamp}\r\n        message={message}\r\n        user={this.state.user}\r\n      />\r\n    ));\r\n  \r\n  displayChannelName = channel => {\r\n    return channel\r\n      ? `${this.state.privateChannel ? '@' : '#'}${channel.name}`\r\n      : '';\r\n  };\r\n\r\n  displayTypingUsers = users => \r\n    users.length > 0 && users.map(user => (\r\n      <div className=\"user_typing\" style={{ display: \"flex\", alignItems: \"center\" }}\r\n        key={user.id}\r\n      >\r\n        <Typing /> <span className=\"user__typing\">{user.name} is typing</span>\r\n      </div>\r\n    ));\r\n  \r\n  displayMessageSkeleton = loading => \r\n    loading ? (\r\n      <React.Fragment>\r\n        {[...Array(15)].map((_, i) => (\r\n          <SkeletonChat key={i} />\r\n        ))}\r\n      </React.Fragment>\r\n    ) : null;\r\n\r\n  render() {\r\n    const {\r\n      messagesRef,\r\n      messages,\r\n      channel,\r\n      user,\r\n      numUniqueUsers,\r\n      searchTerm,\r\n      searchResults,\r\n      searchLoading,\r\n      privateChannel,\r\n      isChannelFavorite,\r\n      typingUsers,\r\n      messagesLoading\r\n    } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <MessagesHeader\r\n          channelName={this.displayChannelName(channel)}\r\n          numUniqueUsers={numUniqueUsers}\r\n          handleSearchChange={this.handleSearchChange}\r\n          searchLoading={searchLoading}\r\n          privateChannel={privateChannel}\r\n          isChannelFavorite={isChannelFavorite}\r\n          handleFavorite={this.handleFavorite}\r\n        />\r\n        \r\n        <Segment style={{ width: \"800\" }}>\r\n          {/* Checking if the search term is active */}\r\n          <Comment.Group className=\"messages\">\r\n            {this.displayMessageSkeleton(messagesLoading)}\r\n            {searchTerm\r\n              ? this.displayMessages(searchResults)\r\n              : this.displayMessages(messages)}\r\n            {this.displayTypingUsers(typingUsers)}\r\n            <div ref={node => (this.newMessageEnd = node)}></div>\r\n          </Comment.Group>\r\n        </Segment>\r\n\r\n        <MessageForm\r\n          messagesRef={messagesRef}\r\n          currentChannel={channel}\r\n          currentUser={user}\r\n          isPrivateChannel={privateChannel}\r\n          getMessagesRef={this.getMessagesRef}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { setTopPosters })(Messages);","import React, { Component } from 'react';\r\nimport { Segment, Header, Accordion, Icon, Image, List } from 'semantic-ui-react';\r\n\r\nimport './MetaPanel.css';\r\n\r\nclass MetaPanel extends Component {\r\n  state = {\r\n    channel: this.props.currentChannel,\r\n    privateChannel: this.props.isPrivateChannel,\r\n    activeIndex: 0\r\n  }\r\n\r\n  setActiveIndex = (event, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index\r\n      ? -1\r\n      : index;\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  formatCount = num => (num <= 10)\r\n    ? `${num} post so far`\r\n    : `for ${num} posts!! Welcome Influencer!`;\r\n\r\n  displayTopPosters = posts => \r\n    Object.entries(posts)\r\n          .sort((a, b) => b[1] - a[1])\r\n          .map(([key, val], i) => (\r\n            <List.Item key={i}>\r\n              <Image avatar src={val.avatar} />\r\n              <List.Content>\r\n                <List.Header as=\"a\">{key}</List.Header>\r\n                <List.Description>{this.formatCount(val.count)}</List.Description>\r\n              </List.Content>\r\n            </List.Item>\r\n          ))\r\n          .slice(0, 5);\r\n  \r\n\r\n  render() {\r\n    const { activeIndex, privateChannel, channel } = this.state;\r\n    const { topPosters } = this.props;\r\n\r\n    if (privateChannel) return null;\r\n\r\n    return (\r\n      <Segment\r\n        className=\"metapanel\"\r\n        loading={!channel}\r\n      >\r\n        <Header as=\"h4\" attached=\"top\">\r\n          About {/* */} # {channel && channel.name}\r\n        </Header>\r\n        <Accordion styled attached=\"true\">\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            index={0}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"info\" />\r\n            Channel Mission\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 0}>\r\n            {\r\n              channel && channel.details\r\n            }\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 1}\r\n            index={1}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"trophy\" />\r\n            Our Hero\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 1}>\r\n            - Still waiting for one -\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 2}\r\n            index={2}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"user circle\" />\r\n            5 Top Posters\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 2}>\r\n            <List>\r\n              {topPosters && this.displayTopPosters(topPosters)}\r\n            </List>\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 3}\r\n            index={3}\r\n            onClick={this.setActiveIndex}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            <Icon name=\"pencil alternate\" />\r\n            Channel Admin\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 3}>\r\n            <Header as=\"h3\">\r\n              <Image circular src=\r\n                {\r\n                  channel && channel.createdBy.avatar\r\n                }\r\n              />\r\n                {\r\n                  channel && channel.createdBy.name\r\n                }\r\n            </Header>\r\n          </Accordion.Content>\r\n        </Accordion>\r\n      </Segment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MetaPanel;","import React from 'react';\r\n// import React, { Component } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ColorPanel from './ColorPanel/ColorPanel';\r\nimport SidePanel from './SidePanel/SidePanel';\r\nimport Messages from './Messages/Messages';\r\nimport MetaPanel from './MetaPanel/MetaPanel';\r\n\r\nimport Navbar from './Navbar';\r\n\r\nimport './chat.css';\r\n\r\nconst Chat = ({ currentUser, currentChannel, isPrivateChannel, topPosters }) => (\r\n    <div>\r\n        <Navbar/>\r\n        <Grid\r\n            columns=\"equal\"\r\n            className=\"chat\"\r\n            style={\r\n            {\r\n                background: \"#fff\"\r\n            }\r\n            }>\r\n            <ColorPanel\r\n                key={currentUser && currentUser.name}\r\n                currentUser={currentUser}\r\n            />\r\n            <SidePanel key={currentUser && currentUser.uid} currentUser={currentUser} />\r\n\r\n            <Grid.Column style={{ marginLeft: 320, marginTop: 20 }}>\r\n                <Messages\r\n                    key={currentChannel && currentChannel.id}\r\n                    currentChannel={currentChannel}\r\n                    currentUser={currentUser}\r\n                    isPrivateChannel={isPrivateChannel}\r\n                />\r\n            </Grid.Column>\r\n            \r\n            <Grid.Column width={4}>\r\n                <MetaPanel\r\n                    key={currentChannel && currentChannel.name}\r\n                    topPosters={topPosters}\r\n                    currentChannel={currentChannel}\r\n                    isPrivateChannel={isPrivateChannel}\r\n                />\r\n            </Grid.Column>\r\n        </Grid>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    currentUser: state.user.currentUser,\r\n    currentChannel: state.channel.currentChannel,\r\n    isPrivateChannel: state.channel.isPrivateChannel,\r\n    topPosters: state.channel.topPosters\r\n});\r\n \r\nexport default connect(mapStateToProps)(Chat);","import React from \"react\";\r\nimport { Grid, Form, Segment, Button, Header, Message } from 'semantic-ui-react';\r\nimport firebase from '../firebase';\r\nimport { Link } from 'react-router-dom';\r\n// Import md5 for providing unique value to User Avatar\r\nimport md5 from 'md5';\r\nimport './registerlogin.css';\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirmation: \"\",\r\n        errors: [],\r\n        loading: false,\r\n        usersRef: firebase.database().ref('users')\r\n    };\r\n\r\n    //function to check wether the form is valid\r\n    formisValid = () => {\r\n        let errors = [];\r\n        let error;\r\n\r\n        if (this.formisEmpty(this.state)) {\r\n            //call an error\r\n            error = { message: \"Fill in all fields\" };\r\n            this.setState({ errors: errors.concat(error) });\r\n            return false;\r\n        } else if (!this.passwordisValid(this.state)) {\r\n            //throw error if password is !Valid (not valid)\r\n            error = { message: \"Make sure Password have 6 Character, and equal to Password Confirmation\" };\r\n            this.setState({ errors: errors.concat(error) });\r\n            return false;\r\n        } else {\r\n            //if form and password valid\r\n            return true;\r\n        }\r\n    };\r\n\r\n    formisEmpty = ({ username, email, password, passwordConfirmation }) => {\r\n        return !username.length || !email.length || !password.length || !passwordConfirmation.length;\r\n    };\r\n\r\n    passwordisValid = ({ password, passwordConfirmation }) => {\r\n        //if the password not more than 6 char\r\n        if (password.length < 6 || passwordConfirmation.length < 6) {\r\n            return false;\r\n            //if the password not equal to\r\n        } else if (password !== passwordConfirmation) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    dispalyErrors = errors =>\r\n        errors.map((error, i) => <p key={i}>{error.message}</p>);\r\n\r\n    handleUserInput = input => {\r\n        this.setState({ [input.target.name]: input.target.value });\r\n    };\r\n\r\n    handleSubmit = input => {\r\n        input.preventDefault();\r\n        if (this.formisValid()) {\r\n            this.setState({ errors: [], loading: true });\r\n            firebase\r\n                .auth()\r\n                .createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n                .then(createdUser => {\r\n                    console.log(createdUser);\r\n                    createdUser.user\r\n                        .updateProfile({\r\n                            displayName: this.state.username,\r\n                            photoURL: `http://gravatar.com/avatar/${md5(\r\n                                createdUser.user.email\r\n                            )}?d=identicon`\r\n                        })\r\n                        .then(() => {\r\n                            this.saveUser(createdUser).then(() => {\r\n                                console.log(\"user saved\");\r\n                            });\r\n                        })\r\n                        .catch(err => {\r\n                            console.error(err);\r\n                            this.setState({\r\n                                errors: this.state.errors.concat(err),\r\n                                loading: false\r\n                            });\r\n                        });\r\n                })\r\n                .catch(err => {\r\n                    console.error(err);\r\n                    this.setState({\r\n                        errors: this.state.errors.concat(err),\r\n                        loading: false\r\n                    });\r\n                });\r\n        }\r\n    };\r\n\r\n    saveUser = createdUser => {\r\n        return this.state.usersRef.child(createdUser.user.uid).set({\r\n            name: createdUser.user.displayName,\r\n            avatar: createdUser.user.photoURL\r\n        });\r\n    };\r\n\r\n    handleInputError = (errors, inputName) => {\r\n        return errors.some(error =>\r\n            error.message.toLowerCase().includes(inputName)\r\n        )\r\n            ? 'error'\r\n            : '';\r\n    };\r\n\r\n    render() {\r\n        const { username, email, password, passwordConfirmation, errors, loading } = this.state;\r\n\r\n        return (\r\n            <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"registerlogin\">\r\n                <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <img\r\n                          className=\"logogram\"\r\n                          src=\"Images/logogram.png\"\r\n                          alt=\"titiktemu\"\r\n                    />\r\n                    <Header as=\"h1\" icon color=\"black\" textAlign=\"center\" \r\n                    style={{marginBottom:\"20px\", marginTop:\"10px\"}}>\r\n                        Join titiktemu\r\n                    </Header>\r\n\r\n                    {/* Form for Register */}\r\n                    <Form onSubmit={this.handleSubmit} size=\"large\">\r\n                        <Segment stacked>\r\n                            <Form.Input\r\n                                fluid\r\n                                name=\"username\"\r\n                                value={username}\r\n                                icon=\"user\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Username / Full Name\"\r\n                                onChange={this.handleUserInput}\r\n                                type=\"text\"\r\n                            />\r\n\r\n                            <Form.Input\r\n                                fluid\r\n                                name=\"email\"\r\n                                value={email}\r\n                                icon=\"mail\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Email Address\"\r\n                                onChange={this.handleUserInput}\r\n                                className={this.handleInputError(errors, 'email')}\r\n                                type=\"email\"\r\n                            />\r\n\r\n                            <Form.Input\r\n                                fluid\r\n                                name=\"password\"\r\n                                value={password}\r\n                                icon=\"lock\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Password\"\r\n                                onChange={this.handleUserInput}\r\n                                className={this.handleInputError(errors, 'password')}\r\n                                type=\"password\"\r\n                            />\r\n\r\n                            <Form.Input\r\n                                fluid\r\n                                name=\"passwordConfirmation\"\r\n                                value={passwordConfirmation}\r\n                                icon=\"repeat\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Passwrod Confirmation\"\r\n                                onChange={this.handleUserInput}\r\n                                className={this.handleInputError(errors, 'password')}\r\n                                type=\"password\"\r\n                            />\r\n\r\n                            <Button\r\n                                disabled={loading}\r\n                                className={loading ? 'loading' : ''}\r\n                                style={{background:\"#008080\", color:\"#fff\"}}\r\n                                fluid\r\n                                size=\"medium\">\r\n                                Process my account\r\n                            </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                    {errors.length > 0 && (\r\n                        <Message error>\r\n                            <h3>Error</h3>\r\n                            {this.dispalyErrors(errors)}\r\n                        </Message>\r\n                    )}\r\n                    <Message style={{fontSize:\"14px\"}}>\r\n                        Already a user? <Link to=\"/login\">Login here!</Link>\r\n                    </Message>\r\n                </Grid.Column>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from \"react\";\r\nimport firebase from '../firebase';\r\nimport { Grid, Form, Segment, Button, Header, Message } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport './registerlogin.css';\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: [],\r\n    loading: false,\r\n  };\r\n\r\n  dispalyErrors = errors =>\r\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\r\n\r\n  handleUserInput = input => {\r\n    this.setState({ [input.target.name]: input.target.value });\r\n  };\r\n\r\n  formisValid = ({ email, password }) => email && password;\r\n\r\n  handleSubmit = input => {\r\n    input.preventDefault();\r\n    if (this.formisValid(this.state)) {\r\n      this.setState({ errors: [], loading: true });\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then(signInUser => {\r\n          console.log(signInUser);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            errors: this.state.errors.concat(err),\r\n            loading: false\r\n          });\r\n        })\r\n    }\r\n  };\r\n\r\n    handleInputError = (errors, inputName) => {\r\n        return errors.some(error =>\r\n            error.message.toLowerCase().includes(inputName)\r\n        )\r\n            ? 'error'\r\n            : '';\r\n    };\r\n\r\n    render() {\r\n        const { email, password, errors, loading } = this.state;\r\n\r\n        return (\r\n            <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"registerlogin\">\r\n            <Grid.Column style={{ maxWidth: 450 }}>\r\n                    <img\r\n                          className=\"logogram\"\r\n                          src=\"Images/logogram.png\"\r\n                          alt=\"titiktemu\"\r\n                    />\r\n                    <Header as=\"h1\" icon color=\"black\" textAlign=\"center\" \r\n                    style={{marginBottom:\"20px\", marginTop:\"10px\"}}>\r\n                        Login to titiktemu\r\n                    </Header>\r\n\r\n                    {/* Form for Login */}\r\n                    <Form onSubmit={this.handleSubmit} size=\"large\">\r\n                        <Segment stacked>\r\n                            <Form.Input\r\n                                fluid\r\n                                name=\"email\"\r\n                                value={email}\r\n                                icon=\"mail\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Email Address\"\r\n                                onChange={this.handleUserInput}\r\n                                className={this.handleInputError(errors, 'email')}\r\n                                type=\"email\"\r\n                            />\r\n\r\n                            <Form.Input\r\n                                fluid\r\n                                name=\"password\"\r\n                                value={password}\r\n                                icon=\"lock\"\r\n                                iconPosition=\"left\"\r\n                                placeholder=\"Password\"\r\n                                onChange={this.handleUserInput}\r\n                                className={this.handleInputError(errors, 'password')}\r\n                                type=\"password\"\r\n                            />\r\n\r\n                            <Button\r\n                                disabled={loading}\r\n                                className={loading ? 'loading' : ''}\r\n                                style={{background:\"#E43F35\", color:\"#fff\"}}\r\n                                fluid\r\n                                size=\"medium\">\r\n                                Login\r\n                            </Button>\r\n                        </Segment>\r\n                    </Form>\r\n                    {errors.length > 0 && (\r\n                        <Message error>\r\n                            <h3>Error</h3>\r\n                            {this.dispalyErrors(errors)}\r\n                        </Message>\r\n                    )}\r\n                    <Message style={{fontSize:\"14px\"}}>\r\n                        Don't have an account? <Link to=\"/register\">Join here!</Link>\r\n                    </Message>\r\n                </Grid.Column>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import { combineReducers } from 'redux';\r\nimport * as actionTypes from '../actions/types';\r\n\r\nconst initialUserState = {\r\n  currentUser: null,\r\n  isLoading: true\r\n};\r\n\r\nconst user_reducer = (state = initialUserState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        currentUser: action.payload.currentUser,\r\n        isLoading: false\r\n      };\r\n    \r\n    case actionTypes.CLEAR_USER:\r\n      return {\r\n        ...state,\r\n        isLoading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/* this is for redux initial state, dont forget */\r\nconst initialChannelState = {\r\n  currentChannel: null,\r\n  isPrivateChannel: false,\r\n  topPosters: null\r\n};\r\n\r\n/* For new case add here */\r\nconst channel_reducer = (state = initialChannelState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_CURRENT_CHANNEL:\r\n      return {\r\n        ...state,\r\n        currentChannel: action.payload.currentChannel\r\n      };\r\n    case actionTypes.SET_PRIVATE_CHANNEL:\r\n      return {\r\n        ...state,\r\n        isPrivateChannel: action.payload.isPrivateChannel\r\n      };\r\n    case actionTypes.SET_TOP_POSTERS:\r\n      return {\r\n        ...state,\r\n        topPosters: action.payload.topPosters\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: user_reducer,\r\n  channel: channel_reducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport { Loader, Dimmer } from 'semantic-ui-react';\r\n\r\nconst Spinner = () => (\r\n  <Dimmer active>\r\n    <Loader size=\"huge\" content={\"Preparing the playground...\"} />\r\n  </Dimmer>\r\n)\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport \"./Todo.css\"\r\n\r\nconst Todos = ({todos, deleteTodo}) => {\r\n\t//Check Length for how many todo Left\r\n\tconst todoList = todos.length ? (\r\n\t\ttodos.map(todo => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"todo-app\" key={todo.id}> \r\n\t\t\t\t\t<span onClick={() => {deleteTodo(todo.id)}}>{todo.content}</span>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t})\r\n\t\t) : (\r\n\t\t//If all todo are done say this\r\n\t\t<div className=\"msg\">\r\n\t\t\t<p> Congrats!, All your priority are done. </p> \r\n\t\t</div>\r\n\t)\r\n\t//If there is a todo, say this\r\n\treturn (\r\n\t\t<div className=\"todo-app list\"> \r\n\t\t\t{todoList} \r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Todos;","import React, { Component } from 'react'\r\nimport \"./Todo.css\"\r\n\r\nclass AddTodo extends Component {\r\n  state = {\r\n    content: ''\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      content: e.target.value\r\n    });\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // call function to add a todo\r\n    this.props.addTodo(this.state);\r\n    this.setState({\r\n      content: ''\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"form\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input type=\"text\" placeholder=\"Type your priority and press enter\" onChange={this.handleChange} value={this.state.content} />\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddTodo;","import React, { Component } from 'react';\nimport Todos from './Todos'\nimport AddTodo from './AddTodo'\n\nclass MainTodoApp extends Component {\n  state = {\n    todos: [\n        {id: 1, content: 'This is your priority list example'},\n        {id: 2, content: 'Click for complete it'}\n    ]\n  }\n  deleteTodo = (id) => {\n    const todos = this.state.todos.filter(todo => {\n      return todo.id !== id\n    });\n    this.setState({\n      todos\n    });\n  }\n\n  addTodo = (todo) => {\n    todo.id = Math.random();\n    let todos = [...this.state.todos, todo];\n    this.setState({\n      todos\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"todo-app\"> \n        <AddTodo addTodo={this.addTodo} />\n        <Todos todos={this.state.todos} deleteTodo={this.deleteTodo} />\n      </div>\n    );\n  }\n}\nexport default MainTodoApp;","import React, { Component } from 'react';\r\n\r\nimport {\r\n\tReactiveBase, DataSearch, MultiDataList,\r\n\tMultiList, SelectedFilters, ResultList\r\n} from '@appbaseio/reactivesearch';\r\n\r\nimport './paper.css';\r\n//import index.css for global container\r\nimport '../index.css';\r\nimport Navbar from './Navbar';\r\n\r\nimport MainTodoApp from './Todo/MainTodoApp';\r\nimport System from './iframe/iframesystem';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\nclass paper extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tisClicked: false,\r\n\t\t\tmessage: \"🔬Filter Hasil\"\r\n\t\t};\r\n\t}\r\n\r\n\t// * For Handle Click Filter\r\n\r\n\thandleClick() {\r\n\t\tthis.setState({\r\n\t\t\tisClicked: !this.state.isClicked,\r\n\t\t\tmessage: this.state.isClicked ? \"🔬 Filter Hasil\" : \"🎬 Tunjukan Hasil\"\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"main-container\">\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<ReactiveBase\r\n\t\t\t\t\tapp=\"titiktemu-paper\"\r\n\t\t\t\t\tcredentials=\"0A46CoJZO:b8511923-aece-4b8a-970e-582d1c2b6c74\"\r\n\t\t\t\t\ttheme={{\r\n            typography: {\r\n              fontFamily:\r\n                '-apple-system, BlinkMacSystemFont, \"Nunito Sans\", sans-serif',\r\n              fontSize: \"16px\"\r\n            }\r\n          }}\r\n\t\t\t\t>\r\n\r\n          {/*Menubar Container*/}\r\n\t\t\t\t\t<div className=\"menubar-container\">\r\n\r\n\t\t\t\t\t\t{/* Toggle Component */}\r\n            <div className=\"toggle-component\">\r\n              <div>\r\n                <NavLink className=\"paper-switch-btn\" style={{ display: 'block', height: '90%' }} to=\"/course\">\r\n                  <Icon name=\"angle left\"/>{\" \"}Switch to course\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n\t\t\t\t\t\t\r\n            {/* Search Component */}\r\n            <div className=\"search-component\">\r\n                <DataSearch\r\n                  componentId=\"mainSearch\"\r\n                  dataField={[\"original_title\"]}\r\n                  categoryField=\"title\"\r\n                  className=\"search-bar\"\r\n                  queryFormat=\"and\"\r\n                  placeholder=\"Search paper here\"\r\n                  iconPosition=\"right\"\r\n                  autosuggest={true}\r\n\t\t\t\t\t\t\t\t\tfilterLabel=\"search\"\r\n\t\t\t\t\t\t\t\t\tstyle={{borderColor:\"#E43F35\"}}\r\n                />\r\n\t\t\t\t\t\t</div>\r\n\r\n            {/* Spotify Component */}\r\n            <div className=\"spotify-component\">\r\n              <System src=\"https://open.spotify.com/embed/user/chillhopmusic/playlist/74sUjcvpGfdOvCHvgzNEDO\" width=\"240\" height=\"80\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"/>\r\n            </div>\r\n          </div>\r\n\r\n\t\t\t\t\t\t{/* Result list */}\r\n\t\t\t\t\t\t<div className=\"sub-container\">\r\n\t\t\t\t\t\t\t<div className=\r\n              {\r\n                this.state.isClicked ? \"left-bar-optional\" : \"left-bar\"\r\n              }\r\n            >\r\n              {/*Todoapp Component*/}\r\n              <div className=\"filter-heading center\">\r\n                <b>\r\n                  {\" \"}Your Prority List{\" \"}\r\n                </b>\r\n              </div> \r\n              <MainTodoApp />\r\n\r\n              <hr className=\"seperator\" /> {/*Seperator*/}\r\n\r\n              {/*Category List Component*/}\r\n              <div className=\"filter-heading center\">\r\n                <b>\r\n                  {\" \"}Category List{\" \"}\r\n                </b>\r\n              </div>\r\n              <MultiList\r\n                componentId=\"category-list\"\r\n                dataField=\"genres_data.keyword\"\r\n                className=\"category-filter\"\r\n                size={100}\r\n                sortBy=\"asc\"\r\n                defaultValue={[\"All Category\"]}\r\n                queryFormat=\"or\"\r\n                selectAllLabel=\"All Category\"\r\n                showCheckbox={true}\r\n                showCount={true}\r\n                showSearch={true}\r\n                placeholder=\"Choose category\"\r\n                react={{\r\n                  and: [\r\n                    \"mainSearch\",\r\n                    \"paperResult\",\r\n                    \"date-filter\",\r\n                    \"language-list\"\r\n                  ]\r\n                }}\r\n                showFilter={true}\r\n                filterLabel=\"Category\"\r\n                URLParams={false}\r\n                innerClass={{\r\n                  label: \"list-item\",\r\n                  input: \"list-input\"\r\n                }}\r\n              />\r\n\r\n              <hr className=\"seperator\" /> {/*Seperator*/}\r\n\r\n              {/*Source Languages Component*/}\r\n              <div className=\"filter-heading center\">\r\n                <b>\r\n                  {\" \"}Source Languages{\" \"}\r\n                </b>\r\n              </div>\r\n              <MultiDataList\r\n                componentId=\"language-list\"\r\n                dataField=\"original_language.keyword\"\r\n                className=\"language-filter\"\r\n                size={100}\r\n                sortBy=\"asc\"\r\n                queryFormat=\"or\"\r\n                selectAllLabel=\"All Languages\"\r\n                showCheckbox={true}\r\n                showSearch={true}\r\n                placeholder=\"Choose the language\"\r\n                react={{\r\n                  and: [\r\n                    \"mainSearch\",\r\n                    \"paperResult\",\r\n                    \"date-filter\",\r\n                    \"category-list\"\r\n                  ]\r\n                }}\r\n                data={[\r\n                  {\r\n                    label: \"English\",\r\n                    value: \"English\"\r\n                  },\r\n                  {\r\n                    label: \"Indonesia\",\r\n                    value: \"Indonesia\"\r\n                  }\r\n                ]}\r\n                showFilter={true}\r\n                filterLabel=\"Language\"\r\n                URLParams={false}\r\n                innerClass={{\r\n                  label: \"list-item\",\r\n                  input: \"list-input\"\r\n                }}\r\n              />\r\n            </div>\r\n\t\t\t\t\t\t<div className=\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.isClicked ?\r\n\t\t\t\t\t\t\t\t\t\"result-container-optional\" :\r\n\t\t\t\t\t\t\t\t\t\"result-container\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<SelectedFilters\r\n                className=\"filters\"\r\n                showClearAll={true}\r\n\t\t\t\t\t\t\t\tclearAllLabel=\"Clear filters\"\r\n\t\t\t\t\t\t\t\tstyle={{marginBottom:\"20px\"}}\r\n              />\r\n\t\t\t\t\t\t\t<ResultList\r\n\t\t\t\t\t\t\t\tcomponentId=\"paperResult\"\r\n\t\t\t\t\t\t\t\tdataField=\"original_title\"\r\n\t\t\t\t\t\t\t\tsize={5}\r\n\t\t\t\t\t\t\t\tonData={this.paperlist}\r\n\t\t\t\t\t\t\t\tclassName=\"result-list-container\"\r\n\t\t\t\t\t\t\t\tpagination={false}\r\n\t\t\t\t\t\t\t\tstream={true}\r\n\t\t\t\t\t\t\t\tpaginationAt=\"bottom\"\r\n\t\t\t\t\t\t\t\tLoader = \"Loading...\"\r\n\t\t\t\t\t\t\t\tnoResults = \"No results were found...\"\r\n\t\t\t\t\t\t\t\tURLParams\r\n\t\t\t\t\t\t\t\treact={{\r\n\t\t\t\t\t\t\t\t\tand: [\r\n\t\t\t\t\t\t\t\t\t\t\"mainSearch\",\r\n\t\t\t\t\t\t\t\t\t\t\"language-list\",\r\n\t\t\t\t\t\t\t\t\t\t\"date-filter\",\r\n\t\t\t\t\t\t\t\t\t\t\"category-list\"\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<button\r\n              className=\"toggle-button\"\r\n              onClick={this.handleClick.bind(this)}\r\n            >\r\n              {this.state.message}\r\n            </button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ReactiveBase>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tpaperlist(data) {\r\n\t\treturn {\r\n\t\t\ttitle: (\r\n\t\t\t\t<a\r\n\t\t\t\t\ttarget=\"homepage.keyword\"\r\n\t\t\t\t\thref={data.homepage}\t>\r\n\t\t\t\t\t<h3\r\n\t\t\t\t\t\tclassName=\"book-title\"\r\n\t\t\t\t\t\t// dangerouslySetInnerHTML={{ __html: data.original_title }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{data.original_title}\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t</a>\r\n\t\t\t),\r\n\t\t\tdescription: (\r\n\t\t\t\t<div className=\"flex column justify-space-between\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tPublished by\t:{\" \"}<span className=\"authors-list\">{data.author_data}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\tPaper Detail\t: <p className=\"paper-description\">{data.overview}</p>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<span className=\"pub-year\">{data.release_date}</span>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t\timage: data.img_source,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport default paper;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  ReactiveBase, DataSearch, MultiDataList,\r\n  MultiList, SelectedFilters, ResultCard\r\n} from '@appbaseio/reactivesearch';\r\nimport './course.css';\r\n//import index.css for global container\r\nimport '../index.css';\r\nimport MainTodoApp from './Todo/MainTodoApp';\r\nimport System from './iframe/iframesystem';\r\n\r\n//Navbar Component\r\nimport Navbar from './Navbar';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Icon } from 'semantic-ui-react';\r\n\r\n\r\n\r\nclass course extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isClicked: false,\r\n      message: \"🔬Filter Hasil\"\r\n    };\r\n  }\r\n\r\n  // * For Handle Click Filter\r\n\r\n  handleClick() {\r\n    this.setState({\r\n      isClicked: !this.state.isClicked,\r\n      message: this.state.isClicked ? \"🔬 Filter Hasil\" : \"🎬 Tunjukan Hasil\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\"> \r\n        <Navbar />\r\n        {/*Main Container that import ReactiveBase from appbase.io*/}\r\n        \r\n        <ReactiveBase\r\n          app=\"titiktemu-course\"\r\n          credentials = \"wfzN5Ye65:f567080a-036e-4f0b-9414-c764d173ae28\"\r\n          theme={{\r\n            typography: {\r\n              fontFamily:\r\n                '-apple-system, BlinkMacSystemFont, \"Nunito Sans\", sans-serif',\r\n                fontSize: \"16px\"\r\n            },\r\n            colors: {\r\n              textColor: \"#000\",\r\n              backgroundColor: \"#2B2827\",\r\n              primaryTextColor: \"#000\",\r\n              primaryColor: \"#d9534f\",\r\n              titleColor: \"#000\",\r\n              alertColor: \"#d9534f\",\r\n              borderColor: \"#666\"\r\n            }\r\n          }}\r\n          className=\"course\"\r\n        >\r\n          {/*Menubar Container*/}\r\n          <div className=\"menubar-container\">\r\n            \r\n            {/* Toggle Component */}\r\n            <div className=\"toggle-component\">\r\n              <div>\r\n                <NavLink className=\"course-switch-btn\" style={{ display: 'block', height: '90%' }} to=\"/paper\">\r\n                  <Icon name=\"angle left\"/>{\" \"}Switch to paper\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Search Component */}\r\n            <div className=\"search-component\">\r\n                <DataSearch\r\n                  componentId=\"mainSearch\"\r\n                  dataField={[\"original_title\"]}\r\n                  categoryField=\"title\"\r\n                  className=\"search-bar\"\r\n                  queryFormat=\"and\"\r\n                  placeholder=\"Search course here\"\r\n                  iconPosition=\"right\"\r\n                  autosuggest={true}\r\n                  filterLabel=\"search\"\r\n                  style={{borderColor:\"#008080\"}}\r\n                />\r\n            </div>\r\n\r\n            {/* Spotify Component */}\r\n            <div className=\"spotify-component\">\r\n              <System src=\"https://open.spotify.com/embed/user/chillhopmusic/playlist/74sUjcvpGfdOvCHvgzNEDO\" width=\"240\" height=\"80\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"/>\r\n            </div>\r\n          </div>\r\n\r\n          {/*Left Container (for filter the result of app)*/}\r\n          <div className=\"sub-container\">\r\n            <div className=\r\n              {\r\n                this.state.isClicked ? \"left-bar-optional\" : \"left-bar\"\r\n              }\r\n            >\r\n              {/*Todoapp Component*/}\r\n              <div className=\"filter-heading center\">\r\n                <b>\r\n                  {\" \"}Your Prority List{\" \"}\r\n                </b>\r\n              </div> \r\n              <MainTodoApp />\r\n\r\n              <hr className=\"seperator\" /> {/*Seperator*/}\r\n\r\n              {/*Category List Component*/}\r\n              <div className=\"filter-heading center\">\r\n                <b>\r\n                  {\" \"}Category List{\" \"}\r\n                </b>\r\n              </div>\r\n              <MultiList\r\n                componentId=\"category-list\"\r\n                dataField=\"genres_data.keyword\"\r\n                className=\"category-filter\"\r\n                size={100}\r\n                sortBy=\"asc\"\r\n                defaultValue={[\"All Category\"]}\r\n                queryFormat=\"or\"\r\n                selectAllLabel=\"All Category\"\r\n                showCheckbox={true}\r\n                showCount={true}\r\n                showSearch={true}\r\n                placeholder=\"Choose category\"\r\n                react={{\r\n                  and: [\r\n                    \"Apps\",\r\n                    \"mainSearch\",\r\n                    \"results\",\r\n                    \"date-filter\",\r\n                    \"language-list\"\r\n                  ]\r\n                }}\r\n                showFilter={true}\r\n                filterLabel=\"Category\"\r\n                URLParams={false}\r\n                innerClass={{\r\n                  label: \"list-item\",\r\n                  input: \"list-input\"\r\n                }}\r\n              />\r\n\r\n              <hr className=\"seperator\" /> {/*Seperator*/}\r\n\r\n              {/*Source Languages Component*/}\r\n              <div className=\"filter-heading center\">\r\n                <b>\r\n                  {\" \"}Source Languages{\" \"}\r\n                </b>\r\n              </div>\r\n              <MultiDataList\r\n                componentId=\"language-list\"\r\n                dataField=\"original_language.keyword\"\r\n                className=\"language-filter\"\r\n                size={100}\r\n                sortBy=\"asc\"\r\n                queryFormat=\"or\"\r\n                selectAllLabel=\"All Languages\"\r\n                showCheckbox={true}\r\n                showSearch={true}\r\n                placeholder=\"Choose the language\"\r\n                react={{\r\n                  and: [\r\n                    \"Apps\",\r\n                    \"mainSearch\",\r\n                    \"results\",\r\n                    \"date-filter\",\r\n                    \"category-list\"\r\n                  ]\r\n                }}\r\n                data={[\r\n                  {\r\n                    label: \"English\",\r\n                    value: \"English\"\r\n                  },\r\n                  {\r\n                    label: \"Indonesia\",\r\n                    value: \"Indonesia\"\r\n                  }\r\n                ]}\r\n                showFilter={true}\r\n                filterLabel=\"Language\"\r\n                URLParams={false}\r\n                innerClass={{\r\n                  label: \"list-item\",\r\n                  input: \"list-input\"\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\r\n              {\r\n                this.state.isClicked\r\n                  ? \"result-container-optional\"\r\n                  : \"result-container\"\r\n              }\r\n            >\r\n              <SelectedFilters\r\n                className=\"filters\"\r\n                showClearAll={true}\r\n                clearAllLabel=\"Clear filters\"\r\n                style={{marginLeft:\"70px\",textColor:\"#fff\"}}\r\n              />\r\n\r\n              <ResultCard\r\n                componentId=\"results\"\r\n                dataField=\"original_title\"\r\n                react={{\r\n                  and: [\r\n                    \"mainSearch\",\r\n                    \"language-list\",\r\n                    \"date-filter\",\r\n                    \"category-list\"\r\n                  ]\r\n                }}\r\n                stream={true}\r\n                pagination={false}\r\n                className=\"Result_card\"\r\n                paginationAt=\"bottom\"\r\n                pages={5}\r\n                size={20}\r\n                Loader=\"Loading...\"\r\n                noResults=\"No results were found...\"\r\n                sortOptions={[\r\n                  {\r\n                    dataField: \"original_title.keyword\",\r\n                    sortBy: \"asc\",\r\n                    label: \"Sortir dari Judul (A-Z) \\u00A0\"\r\n                  },\r\n                  {\r\n                    dataField: \"release_date.keyword\",\r\n                    sortBy: \"asc\",\r\n                    label: \"Sortir dari Terupdate \\u00A0\"\r\n                  }\r\n                ]}\r\n                innerClass={{\r\n                  title: \"result-title\",\r\n                  listItem: \"result-item\",\r\n                  list: \"list-container\",\r\n                  sortOptions: \"sort-options\",\r\n                  resultStats: \"result-stats\",\r\n                  resultsInfo: \"result-list-info\",\r\n                }}\r\n                onData={function(data) {\r\n                  return {\r\n                    description: (\r\n                      <div className=\"main-description\">\r\n                        <div className=\"ih-item square effect6 top_to_bottom\">\r\n                          <a\r\n                            target=\"homepage.keyword\"\r\n                            href={data.homepage}\r\n                          >\r\n                            <div className=\"img\">\r\n                              <img\r\n                                src={\r\n                                  data.img_source\r\n                                }\r\n                                alt={data.img_source}\r\n                                className=\"result-image\"\r\n                              />\r\n                            </div>\r\n                            <div className=\"sub-description\">\r\n                              <div className=\"result-title\">\r\n                                {data.original_title}\r\n                                <span className=\"course-level\">\r\n                                  <p>\r\n                                    <b> Course level : {data.level} </b> - {data.category}\r\n                                  </p>\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"course-description\">\r\n                                <span>\r\n                                  {data.overview}\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                  };\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              className=\"toggle-button\"\r\n              onClick={this.handleClick.bind(this)}\r\n            >\r\n              {this.state.message}\r\n            </button>\r\n          </div>\r\n        </ReactiveBase>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default course;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from './components/firebase';\nimport home from './components/home';\nimport landingpage from './components/landingpage';\nimport event from './components/event';\nimport nothinghere from './components/nothinghere';\nimport chat from './components/chat';\nimport { Route, Switch, BrowserRouter as Router, withRouter } from 'react-router-dom';\nimport Register from './components/Auth/Register';\nimport Login from './components/Auth/Login';\nimport { createStore } from 'redux';\nimport { Provider, connect } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport { setUser, clearUser } from './actions';\nimport Spinner from './loadingspinner';\nimport paper from './components/paper';\nimport course from './components/course';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.props.setUser(user);\n        this.props.history.push(\"/\");\n      } else {\n        this.props.clearUser();\n        this.props.history.push(\"/landingpage\");\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? <Spinner /> : (\n        <div>\n          {/*This is the function to Route to Page (via switch)*/}\n          <Switch>\n            <Route exact path=\"/\" component={home} />\n            <Route exact path=\"/landingpage\" component={landingpage} />\n            <Route exact path=\"/event\" component={event} />\n            <Route exact path=\"/chat\" component={chat} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/course\" component={course} />\n            <Route exact path=\"/paper\" component={paper} />\n            <Route component={nothinghere} />\n          </Switch>\n        </div>\n    );\n  }\n}\n\nconst mapStateFromProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nconst RootWithAuth = withRouter(\n  connect(\n    mapStateFromProps,\n    { setUser, clearUser }\n  )(Root)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      < RootWithAuth />\n    </Router>\n  </Provider>,\n    document.getElementById('root')\n  );\n  serviceWorker.unregister();\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  \n"],"sourceRoot":""}